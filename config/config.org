#+TITLE: Emacs Personal Config
#+AUTHOR: FLÁVIO MUNIZ
#+STARTUP: showeverything

* Table of Contents :toc:
- [[#general-settings][General Settings]]
  - [[#graphical-interface][Graphical Interface]]
  - [[#code][Code]]
  - [[#theme][Theme]]
  - [[#font][Font]]
  - [[#keybindings][KeyBindings]]
- [[#packages][Packages]]
  - [[#org-mode][Org Mode]]
  - [[#repeat-mode][Repeat Mode]]
  - [[#which-key][Which-Key]]

* General Settings

** Graphical Interface

*** Disable Startup Message, Tools, Scrool and Menu Bar
#+begin_src emacs-lisp
  (setq inhibit-splash-screen t)
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
#+end_src

*** Enable Column/Line Number and Truncated Lines
#+begin_src emacs-lisp
  (column-number-mode 1)
  (global-display-line-numbers-mode 1)
  (global-visual-line-mode 1)
#+end_src

*** Full Screen at Startup
#+begin_src emacs-lisp
  (add-hook 'window-setup-hook
            'toggle-frame-maximized t)
#+end_src

** Code

*** Self-Closing Parenthesis and Ctr-c Ctr-v Mode
#+begin_src emacs-lisp
  (electric-pair-mode 1)
  (cua-mode 1)
#+end_src

*** Custom Tab Width
#+begin_src emacs-lisp
  (setq-default tab-width 4)
#+end_src

*** Disable Auto Save and Auto Backup
#+begin_src emacs-lisp
  (setq make-bakcup-files nil)
  (setq auto-save-default nil)
#+end_src

** Theme
Install and load zenburn theme.
#+begin_src emacs-lisp
  (use-package zenburn-theme
    :ensure t
    :config
    (load-theme 'zenburn t))
#+end_src

** Font
Set custom font, and makes all comments be in italic.
#+begin_src emacs-lisp
  (add-to-list 'default-frame-alist
             '(font . "Ubuntu Mono-14"))
  (set-face-attribute 'default t
                      :font "Ubuntu Mono-14")

  (set-face-attribute 'font-lock-comment-face nil
    :slant 'italic)
#+end_src

** KeyBindings
#+begin_src emacs-lisp
  (use-package general
    :ensure t
    :config

    ;; Global Keybind for shell
    (general-define-key
     "<f9>" 'shell)
  
    ;; Creates a prefix caller
    (general-create-definer my-leader-def
                            :prefix "C-c")

    (my-leader-def
     "f" '(find-file :wk "find file")
     "c f" '((lambda () (interactive) (find-file "~/.config/emacs/config.org")) :wk "edit emacs config")
     "TAB TAB" '(comment-line :wk "comment Line(s)")
     "r" '(lambda () (interactive) (org-babel-load-file (expand-file-name "~/.emacs.d/config.org"))) :wk "reload emacs config"))
#+end_src

* Packages

** Org Mode
*** Enable Table of Contents
#+begin_src emacs-lisp
  (use-package toc-org
    :ensure t
    :commands toc-org-enable
    :init (add-hook 'org-mode-hook 'toc-org-enable))
#+end_src

*** Enable Org Bullets
#+begin_src emacs-lisp
  (add-hook 'org-mode-hook 'org-indent-mode)
  (use-package org-bullets
    :ensure t)
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+end_src

*** Disable Eletric Indent
#+begin_src emacs-lisp
  (electric-indent-mode -1)
#+end_src

** Repeat Mode
#+begin_src emacs-lisp
  (use-package repeat
    :ensure t
    :hook (after-init . repeat-mode)
    :custom
    (repeat-too-dangerous '(kill-this-buffer))
    (repeat-exit-timeout 3))
#+end_src

*** Source Code Block Tag Expansion
Org-tempo is not a separate package but a module within org that can be enabled.  Org-tempo allows for '<s' followed by TAB to expand to a begin_src tag.  Other expansions available include:

| Typing the below + TAB | Expands to ...                          |
|------------------------+-----------------------------------------|
| <a                     | '#+BEGIN_EXPORT ascii' … '#+END_EXPORT  |
| <c                     | '#+BEGIN_CENTER' … '#+END_CENTER'       |
| <C                     | '#+BEGIN_COMMENT' … '#+END_COMMENT'     |
| <e                     | '#+BEGIN_EXAMPLE' … '#+END_EXAMPLE'     |
| <E                     | '#+BEGIN_EXPORT' … '#+END_EXPORT'       |
| <h                     | '#+BEGIN_EXPORT html' … '#+END_EXPORT'  |
| <l                     | '#+BEGIN_EXPORT latex' … '#+END_EXPORT' |
| <q                     | '#+BEGIN_QUOTE' … '#+END_QUOTE'         |
| <s                     | '#+BEGIN_SRC' … '#+END_SRC'             |
| <v                     | '#+BEGIN_VERSE' … '#+END_VERSE'         |

#+begin_src emacs-lisp 
(require 'org-tempo)
#+end_src


** Which-Key
#+begin_src emacs-lisp
  (use-package which-key
    :ensure t
    :init
      (which-key-mode 1)
      :config
    (setq which-key-side-window-location 'bottom
        which-key-sort-order #'which-key-key-order-alpha
        which-key-sort-uppercase-first nil
        which-key-add-column-padding 1
        which-key-max-display-columns nil
        which-key-min-display-lines 6
        which-key-side-window-slot -10
        which-key-side-window-max-height 0.25
        which-key-idle-delay 0.8
        which-key-max-description-length 25
        which-key-allow-imprecise-window-fit t
        which-key-separator " → " ))
#+end_src

